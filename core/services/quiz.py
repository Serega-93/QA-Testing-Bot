from data.database import load_questions


class QuizService:
    def __init__(self):
        self.questions = load_questions()

    async def start_quiz(self, context):
        """–ù–∞—á–∏–Ω–∞–µ—Ç –Ω–æ–≤—ã–π —Ç–µ—Å—Ç"""
        if not self.questions:
            return False

        context.user_data['questions'] = self.questions
        context.user_data['current_question'] = 0
        context.user_data['score'] = 0
        return True

    @staticmethod
    async def get_current_question(context):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å"""
        current_index = context.user_data.get('current_question', 0)
        questions = context.user_data.get('questions', [])

        if current_index >= len(questions):
            return None

        return questions[current_index], current_index

    @staticmethod
    async def process_answer(context, question_index, answer_index):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        questions = context.user_data['questions']
        question = questions[question_index]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞
        is_correct = answer_index == question['correct_answer']

        if is_correct:
            context.user_data['score'] += 1
            result_icon = "‚úÖ"
            result_text = "–ü—Ä–∞–≤–∏–ª—å–Ω–æ!"
        else:
            result_icon = "‚ùå"
            result_text = f"–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!"

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        result_message = f"""{result_icon} –í–æ–ø—Ä–æ—Å {question_index + 1}: {result_text}

üí° {question['explanation']}"""

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
        context.user_data['current_question'] = question_index + 1

        return result_message, is_correct

    @staticmethod
    def is_quiz_finished(context):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω –ª–∏ —Ç–µ—Å—Ç (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π)"""
        current_index = context.user_data.get('current_question', 0)
        questions = context.user_data.get('questions', [])
        return current_index >= len(questions)

    @staticmethod
    def get_quiz_results(context):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π)"""
        score = context.user_data.get('score', 0)
        total = len(context.user_data.get('questions', []))
        return score, total
