from telegram import Update
from telegram.ext import ContextTypes
from utils.keyboards import create_main_menu_keyboard
from core.services.stats import StatsService
from utils.feedback import get_feedback


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –°–û —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    user = update.message.from_user

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ
    StatsService.init_user(user.id, user.username, user.first_name)

    # –û–¢–õ–ê–î–ö–ê: –≤—ã–≤–æ–¥–∏–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    from data.storage import storage
    storage.debug_print_all_data()

    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = StatsService.get_user_stats(user.id)
    success_rate = StatsService.calculate_success_rate(stats)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –±–ª–æ–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    if stats and stats.total_tests > 0:
        stats_section = f"""
üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
üéØ –¢–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ: {stats.total_tests}
üèÜ –õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {stats.best_score}/30
üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {success_rate}%
"""
    else:
        stats_section = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –ø—Ä–æ–π–¥–∏—Ç–µ –ø–µ—Ä–≤—ã–π —Ç–µ—Å—Ç!"

    welcome_text = f"""
–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã

–Ø - –¥–µ–º–æ-–±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π QA. 

{stats_section}

üìö –ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç:
‚Ä¢ 30 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –æ—Å–Ω–æ–≤–∞–º QA
‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –∫ –∫–∞–∂–¥–æ–º—É –æ—Ç–≤–µ—Ç—É
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å? üöÄ
    """

    await update.message.reply_text(
        welcome_text,
        reply_markup=create_main_menu_keyboard()
    )


async def restart_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ - –æ—á–∏—â–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç —Å –Ω–∞—á–∞–ª–∞
    """
    # –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data.clear()

    user = update.message.from_user

    restart_text = f"""
üîÑ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!

–ü—Ä–∏–≤–µ—Ç —Å–Ω–æ–≤–∞, {user.first_name}! üëã

–í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã. –í—ã –Ω–∞—á–∏–Ω–∞–µ—Ç–µ —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞.

–ì–æ—Ç–æ–≤—ã –∫ –Ω–æ–≤—ã–º –∏—Å–ø—ã—Ç–∞–Ω–∏—è–º? üöÄ
    """

    await update.message.reply_text(restart_text)


async def cancel_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /cancel - –æ—Ç–º–µ–Ω—è–µ—Ç —Ç–µ—Å—Ç –µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω
    """
    if 'current_question' in context.user_data:
        from core.handlers.callbacks import cancel_test_from_button
        # –°–æ–∑–¥–∞–µ–º fake query –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        class FakeQuery:
            def __init__(self, message):
                self.message = message

        fake_query = FakeQuery(update.message)
        await cancel_test_from_button(fake_query, context)
    else:
        await update.message.reply_text("‚ùå –ù–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å. –í—ã –Ω–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
