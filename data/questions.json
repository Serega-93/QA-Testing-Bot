{
  "questions": [
    {
      "id": 1,
      "question": "Что такое тест-кейс?",
      "options": [
        "Документ для описания тестовых сценариев",
        "Инструмент для автоматизации тестирования",
        "Отчет об обнаруженных багах",
        "План тестирования проекта"
      ],
      "correct_answer": 0,
      "explanation": "Тест-кейс - это документ, который описывает что, как и при каких условиях тестировать. Он включает шаги, ожидаемые результаты и тестовые данные.",
      "topic": "manual_testing",
      "difficulty": "easy"
    },
    {
      "id": 2,
      "question": "Что такое баг-репорт?",
      "options": [
        "Документ, описывающий обнаруженную ошибку",
        "План исправления ошибок",
        "Отчет о проделанной работе",
        "Список всех тест-кейсов"
      ],
      "correct_answer": 0,
      "explanation": "Баг-репорт используется для описания найденных дефектов. Он должен содержать четкие шаги воспроизведения, ожидаемый и фактический результат.",
      "topic": "manual_testing",
      "difficulty": "easy"
    },
    {
      "id": 3,
      "question": "Что проверяет smoke testing?",
      "options": [
        "Основную функциональность после сборки",
        "Все возможные сценарии использования",
        "Производительность системы",
        "Безопасность приложения"
      ],
      "correct_answer": 0,
      "explanation": "Smoke testing проверяет основную функциональность приложения после сборки, чтобы убедиться, что ключевые функции работают перед глубоким тестированием.",
      "topic": "manual_testing",
      "difficulty": "easy"
    },
    {
      "id": 4,
      "question": "Когда выполняется regression testing?",
      "options": [
        "После любых изменений в коде",
        "Только при добавлении нового функционала",
        "Только при исправлении критических багов",
        "Раз в месяц по расписанию"
      ],
      "correct_answer": 0,
      "explanation": "Регрессионное тестирование выполняется после ЛЮБЫХ изменений в коде, чтобы убедиться что существующий функционал не сломан.",
      "topic": "manual_testing",
      "difficulty": "medium"
    },
    {
      "id": 5,
      "question": "Что такое test environment?",
      "options": [
        "Изолированная среда для тестирования",
        "Рабочее место тестировщика",
        "Программное обеспечение для тестирования",
        "Документация по тестированию"
      ],
      "correct_answer": 0,
      "explanation": "Test environment - это изолированная среда, максимально приближенная к production, где выполняется тестирование.",
      "topic": "manual_testing",
      "difficulty": "easy"
    },
    {
      "id": 6,
      "question": "Что такое equivalence partitioning?",
      "options": [
        "Разделение входных данных на классы эквивалентности",
        "Метод тестирования граничных значений",
        "Тестирование всех возможных комбинаций",
        "Случайный выбор тестовых данных"
      ],
      "correct_answer": 0,
      "explanation": "Эквивалентное разделение - техника тест-дизайна, где входные данные делятся на классы, которые должны обрабатываться одинаково системой.",
      "topic": "test_design",
      "difficulty": "medium"
    },
    {
      "id": 7,
      "question": "Что проверяет boundary value analysis?",
      "options": [
        "Значения на границах диапазонов",
        "Все возможные значения в диапазоне",
        "Только минимальные значения",
        "Только максимальные значения"
      ],
      "correct_answer": 0,
      "explanation": "Анализ граничных значений - техника тестирования, фокусирующаяся на значениях на границах входных доменов, где чаще всего встречаются ошибки.",
      "topic": "test_design",
      "difficulty": "medium"
    },
    {
      "id": 8,
      "question": "Когда используется pairwise testing?",
      "options": [
        "Для тестирования комбинаций параметров при большом количестве вариантов",
        "Для тестирования только двух функций одновременно",
        "Для сравнения двух версий приложения",
        "Для тестирования пар пользователей"
      ],
      "correct_answer": 0,
      "explanation": "Pairwise testing используется для эффективного тестирования комбинаций входных параметров, покрывая все пары значений при минимальном количестве тестов.",
      "topic": "test_design",
      "difficulty": "hard"
    },
    {
      "id": 9,
      "question": "Что такое state transition testing?",
      "options": [
        "Тестирование переходов между состояниями системы",
        "Тестирование производительности при нагрузке",
        "Тестирование интерфейса пользователя",
        "Тестирование миграции данных"
      ],
      "correct_answer": 0,
      "explanation": "State transition testing фокусируется на тестировании переходов между различными состояниями системы и реакций на события.",
      "topic": "test_design",
      "difficulty": "hard"
    },
    {
      "id": 10,
      "question": "Что такое use case testing?",
      "options": [
        "Тестирование на основе сценариев использования системы",
        "Тестирование конкретных функций изолированно",
        "Тестирование удобства использования интерфейса",
        "Тестирование в реальных условиях эксплуатации"
      ],
      "correct_answer": 0,
      "explanation": "Use case testing основан на тестировании сценариев использования системы с точки зрения конечного пользователя.",
      "topic": "test_design",
      "difficulty": "medium"
    },
    {
      "id": 11,
      "question": "Какой статус бага указывает что разработчик начал работу над исправлением?",
      "options": [
        "In Progress",
        "Open",
        "Reopened",
        "Resolved"
      ],
      "correct_answer": 0,
      "explanation": "Статус 'In Progress' означает что разработчик начал работу над исправлением бага.",
      "topic": "bug_lifecycle",
      "difficulty": "easy"
    },
    {
      "id": 12,
      "question": "Когда баг получает статус 'Reopened'?",
      "options": [
        "Когда исправление не работает и баг воспроизводится снова",
        "Когда баг переоткрыт после долгого времени",
        "Когда баг отправлен на доработку",
        "Когда баг duplicate другого бага"
      ],
      "correct_answer": 0,
      "explanation": "Статус 'Reopened' присваивается когда исправление не работает и баг воспроизводится при повторном тестировании.",
      "topic": "bug_lifecycle",
      "difficulty": "medium"
    },
    {
      "id": 13,
      "question": "Что означает статус бага 'Won't Fix'?",
      "options": [
        "Баг признан некритичным и не будет исправлен",
        "Баг не может быть воспроизведен",
        "Баг исправлен в другой версии",
        "Баг требует дополнительной информации"
      ],
      "correct_answer": 0,
      "explanation": "'Won't Fix' означает что баг признан некритичным, несущественным или слишком дорогим для исправления.",
      "topic": "bug_lifecycle",
      "difficulty": "medium"
    },
    {
      "id": 14,
      "question": "Какой статус бага указывает что исправление проверено и работает?",
      "options": [
        "Verified",
        "Resolved",
        "Closed",
        "Completed"
      ],
      "correct_answer": 0,
      "explanation": "Статус 'Verified' означает что QA проверил исправление и подтвердил что баг больше не воспроизводится.",
      "topic": "bug_lifecycle",
      "difficulty": "easy"
    },
    {
      "id": 15,
      "question": "Когда баг помечается как 'Duplicate'?",
      "options": [
        "Когда обнаружен повторно уже заведенный баг",
        "Когда баг найден в нескольких модулях",
        "Когда баг имеет несколько причин",
        "Когда баг воспроизводится на разных устройствах"
      ],
      "correct_answer": 0,
      "explanation": "'Duplicate' означает что этот баг уже был заведен ранее и отслеживается под другим номером.",
      "topic": "bug_lifecycle",
      "difficulty": "easy"
    },
    {
      "id": 16,
      "question": "Что такое test plan?",
      "options": [
        "Документ описывающий стратегию и объем тестирования",
        "Список всех тест-кейсов проекта",
        "График выполнения тестирования",
        "Отчет о результатах тестирования"
      ],
      "correct_answer": 0,
      "explanation": "Test Plan - это основной документ тестирования, описывающий scope, подход, ресурсы, график и риски тестирования.",
      "topic": "test_documentation",
      "difficulty": "easy"
    },
    {
      "id": 17,
      "question": "Что должно быть в хорошем тест-кейсе?",
      "options": [
        "Шаги, ожидаемый результат, тестовые данные",
        "Только название и описание",
        "Ссылки на требования и баги",
        "Статус выполнения и дата"
      ],
      "correct_answer": 0,
      "explanation": "Хороший тест-кейс содержит четкие шаги выполнения, ожидаемый результат и необходимые тестовые данные.",
      "topic": "test_documentation",
      "difficulty": "easy"
    },
    {
      "id": 18,
      "question": "Что такое traceability matrix?",
      "options": [
        "Таблица связывающая требования и тест-кейсы",
        "Матрица приоритетов тестирования",
        "График зависимостей между тестами",
        "Отчет о покрытии кода тестами"
      ],
      "correct_answer": 0,
      "explanation": "Traceability Matrix обеспечивает прослеживаемость требований к тест-кейсам, показывая покрытие требований тестированием.",
      "topic": "test_documentation",
      "difficulty": "medium"
    },
    {
      "id": 19,
      "question": "Что включает test summary report?",
      "options": [
        "Итоги тестирования, метрики, рекомендации",
        "Детальные результаты каждого тест-кейса",
        "Статистику по всем найденным багам",
        "План тестирования следующей версии"
      ],
      "correct_answer": 0,
      "explanation": "Test Summary Report содержит итоги тестирования, ключевые метрики, выводы и рекомендации для stakeholders.",
      "topic": "test_documentation",
      "difficulty": "medium"
    },
    {
      "id": 20,
      "question": "Для чего используется check-list в тестировании?",
      "options": [
        "Для быстрой проверки ключевых функций без детальных тест-кейсов",
        "Для замены тест-кейсов в agile проектах",
        "Для отслеживания выполнения тестирования",
        "Для документирования процесса тестирования"
      ],
      "correct_answer": 0,
      "explanation": "Чек-листы используются для быстрой проверки ключевых функций, особенно когда нет времени на детальные тест-кейсы.",
      "topic": "test_documentation",
      "difficulty": "easy"
    },
    {
      "id": 21,
      "question": "Что такое HTTP status code 200?",
      "options": [
        "Успешный запрос",
        "Ошибка клиента",
        "Ошибка сервера",
        "Перенаправление"
      ],
      "correct_answer": 0,
      "explanation": "HTTP 200 OK - статус успешного выполнения запроса.",
      "topic": "api_testing",
      "difficulty": "easy"
    },
    {
      "id": 22,
      "question": "Какой метод HTTP используется для создания новых ресурсов?",
      "options": [
        "POST",
        "GET",
        "PUT",
        "DELETE"
      ],
      "correct_answer": 0,
      "explanation": "POST используется для создания новых ресурсов на сервере.",
      "topic": "api_testing",
      "difficulty": "easy"
    },
    {
      "id": 23,
      "question": "Что такое REST API?",
      "options": [
        "Архитектурный стиль для создания веб-сервисов",
        "Протокол для передачи данных",
        "Язык запросов к базам данных",
        "Фреймворк для тестирования API"
      ],
      "correct_answer": 0,
      "explanation": "REST (Representational State Transfer) - архитектурный стиль для создания масштабируемых веб-сервисов.",
      "topic": "api_testing",
      "difficulty": "medium"
    },
    {
      "id": 24,
      "question": "Что проверяет negative testing в API?",
      "options": [
        "Поведение системы на невалидные данные и ошибки",
        "Только успешные сценарии использования",
        "Производительность API под нагрузкой",
        "Безопасность endpoints"
      ],
      "correct_answer": 0,
      "explanation": "Negative testing проверяет как API обрабатывает невалидные данные, ошибки и граничные случаи.",
      "topic": "api_testing",
      "difficulty": "medium"
    },
    {
      "id": 25,
      "question": "Что такое endpoint в контексте API?",
      "options": [
        "URL который принимает запросы и возвращает responses",
        "Конечная точка тестирования",
        "Метод завершения API запроса",
        "Лимит запросов к API"
      ],
      "correct_answer": 0,
      "explanation": "Endpoint - это конкретный URL API, который принимает запросы и возвращает responses.",
      "topic": "api_testing",
      "difficulty": "easy"
    },
    {
      "id": 26,
      "question": "Что делает SQL команда SELECT?",
      "options": [
        "Извлекает данные из базы данных",
        "Добавляет новые данные в таблицу",
        "Изменяет существующие данные",
        "Удаляет данные из таблицы"
      ],
      "correct_answer": 0,
      "explanation": "SELECT используется для извлечения данных из одной или нескольких таблиц базы данных.",
      "topic": "sql_basics",
      "difficulty": "easy"
    },
    {
      "id": 27,
      "question": "Что такое PRIMARY KEY в SQL?",
      "options": [
        "Уникальный идентификатор записи в таблице",
        "Основной индекс для поиска",
        "Главная таблица в базе данных",
        "Ключ для соединения таблиц"
      ],
      "correct_answer": 0,
      "explanation": "PRIMARY KEY - это уникальный идентификатор каждой записи в таблице, который не может быть NULL.",
      "topic": "sql_basics",
      "difficulty": "easy"
    },
    {
      "id": 28,
      "question": "Для чего используется JOIN в SQL?",
      "options": [
        "Для объединения данных из нескольких таблиц",
        "Для соединения строк в одной таблице",
        "Для объединения результатов нескольких запросов",
        "Для создания связи между базами данных"
      ],
      "correct_answer": 0,
      "explanation": "JOIN используется для объединения строк из двух или более таблиц на основе связанного столбца.",
      "topic": "sql_basics",
      "difficulty": "medium"
    },
    {
      "id": 29,
      "question": "Что делает команда UPDATE?",
      "options": [
        "Изменяет существующие данные в таблице",
        "Обновляет структуру таблицы",
        "Добавляет новые столбцы в таблицу",
        "Обновляет индексы базы данных"
      ],
      "correct_answer": 0,
      "explanation": "UPDATE изменяет существующие данные в таблице на основе указанного условия.",
      "topic": "sql_basics",
      "difficulty": "easy"
    },
    {
      "id": 30,
      "question": "Что такое FOREIGN KEY?",
      "options": [
        "Ссылка на PRIMARY KEY другой таблицы",
        "Внешний ключ для шифрования данных",
        "Ключ для доступа к внешней базе данных",
        "Резервный ключ таблицы"
      ],
      "correct_answer": 0,
      "explanation": "FOREIGN KEY - это поле в одной таблице, которое ссылается на PRIMARY KEY в другой таблице, создавая связь между таблицами.",
      "topic": "sql_basics",
      "difficulty": "medium"
    }
  ]
}
